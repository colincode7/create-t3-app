---
import { KnownLanguageCode, KNOWN_LANGUAGES } from "../../config";
import clsx from "clsx";

export interface Props {
  language: KnownLanguageCode;
}
const { language } = Astro.props;
---

<div class="flex items-center gap-2">
  <div class="relative">
    <button
      id="language-select-button"
      type="button"
      class="relative flex items-center justify-center h-10 w-10 cursor-pointer rounded-lg border dark:bg-t3-purple-200/10 hover:bg-t3-purple-200/75 dark:border-t3-purple-200/20 bg-t3-purple-200/50 text-left dark:hover:border-t3-purple-200/50 sm:text-sm"
      aria-haspopup="listbox"
      aria-expanded="true"
      aria-labelledby="listbox-label"
    >
      <svg
        viewBox="0 0 88.6 77.3"
        class="h-6 w-6 dark:text-t3-purple-100 text-slate-900"
        role="img"
      >
        <path
          fill="currentColor"
          d="M61 24.6h7.9l18.7 51.6h-7.7l-5.4-15.5H54.3l-5.6 15.5h-7.2L61 24.6zM72.6 55l-8-22.8L56.3 55h16.3z"
        ></path>
        <path
          fill="currentColor"
          d="M53.6 60.6c-10-4-16-9-22-14 0 0 1.3 1.3 0 0-6 5-20 13-20 13l-4-6c8-5 10-6 19-13-2.1-1.9-12-13-13-19h8c4 9 10 14 10 14 10-8 10-19 10-19h8s-1 13-12 24c5 5 10 9 19 13l-3 7zm-52-44h56v-8h-23v-7h-9v7h-24v8z"
        ></path>
      </svg>
    </button>

    <ul
      class="absolute bg-default right-0 transform dark:border-t3-purple-200/50 transition-all origin-top ease-in-out duration-300 z-10 mt-1 scale-y-0 w-fit rounded-lg overflow-hidden"
      tabindex="-1"
      role="listbox"
      aria-labelledby="listbox-label"
      aria-activedescendant="listbox-option-3"
    >
      {
        Object.entries(KNOWN_LANGUAGES).map(([code, name]) => (
          <li
            class={clsx(
              "cursor-pointer bg-t3-purple-200/50 px-3 py-1 text-slate-900 hover:bg-t3-purple-200/75 dark:bg-t3-purple-200/10 dark:text-t3-purple-100 dark:hover:bg-t3-purple-200/20",
              {
                "bg-t3-purple-200/75 dark:bg-t3-purple-200/20":
                  code === language,
              },
            )}
            role="option"
            data-value={code}
          >
            <span class="truncate">{name}</span>
          </li>
        ))
      }
    </ul>
  </div>
</div>

<script>
  const button = document.querySelector(
    "#language-select-button",
  ) as HTMLButtonElement;
  const list = button.nextElementSibling as HTMLUListElement;
  button?.addEventListener("click", () => {
    list.classList.toggle("scale-y-0");
    list.classList.toggle("border");
  });

  const listItems = list.querySelectorAll("li");
  listItems.forEach((item) => {
    item.addEventListener("click", (e) => {
      // @ts-ignore - why is this not typed?
      const lang = e.currentTarget.dataset.value;
      const [_1, _2, ...slug] = window.location.pathname.split("/");
      window.location.pathname = `/${lang}/${slug.join("/")}`;
    });
  });
</script>
