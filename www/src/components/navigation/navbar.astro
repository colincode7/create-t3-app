---
import clsx from "clsx";
import GithubIcon from "./githubIcon.astro";
import Search from "./Search";
import SidebarToggle from "./sidebarToggle.astro";
import ThemeToggleButton from "./themeToggleButton.astro";

const { pathname } = Astro.url;
const isLanding = pathname === "/";
const hasTrailing = pathname.endsWith("/");
const currentPage = pathname.slice(0, hasTrailing ? -1 : pathname.length);

const navbarLinks: Array<{ href: string; label: string }> = [
  {
    href: "/en/introduction",
    label: "Docs",
  },
  {
    href: "/en/faq",
    label: "FAQ",
  },
  {
    href: "/en/t3-collection",
    label: "T3 Collection",
  },
];
---

<nav
  class={clsx("flex flex-col relative justify-between items-center py-4", {
    "z-40 text-slate-50": isLanding,
    "transition-colors": !isLanding,
  })}
  aria-label="Global"
>
  <div class="flex items-center justify-between w-full px-4 lg:px-10 md:px-10">
    <div class="flex justify-between items-center w-full md:w-auto">
      <div>
        <a href="/">
          <img
            src="/favicon.svg"
            width="50"
            height="50"
            alt="T3 Logo"
            class="rounded-xl"
          />
        </a>
      </div>
      <div class="hidden -space-x-1 md:flex md:ml-10 gap-2">
        {
          navbarLinks.map((navbarLink) => (
            <a
              class={clsx(
                "relative inline-flex items-center rounded-md border border-transparent px-3 py-2 transition-colors hover:no-underline",
                {
                  "bg-t3-purple-200/10 text-t3-purple-300":
                    navbarLink.href === currentPage,
                  "rounded-lg text-t3-purple-100 hover:bg-t3-purple-200/10 hover:text-t3-purple-300":
                    isLanding,
                  "rounded-lg text-t3-purple-500 hover:bg-t3-purple-200/30 hover:text-t3-purple-400 dark:text-t3-purple-100 dark:hover:bg-t3-purple-200/10 dark:hover:text-t3-purple-300":
                    !isLanding,
                },
              )}
              href={navbarLink.href}
            >
              {navbarLink.label}
            </a>
          ))
        }
      </div>
    </div>
    <div class="flex flex-grow justify-end items-center gap-4">
      <GithubIcon />
      <div
        class={clsx("text-center", {
          hidden: isLanding,
        })}
      >
        <ThemeToggleButton />
      </div>

      <div class="block md:hidden">
        <SidebarToggle currentPage={currentPage} />
      </div>
      <div class="hidden md:block rounded-lg w-full max-w-xs">
        <Search isLanding={currentPage === "/"} client:load />
      </div>
    </div>
  </div>
</nav>
