import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";

import { signIn, signOut, useSession } from "next-auth/react";

const AuthShowcase: React.FC = () => {
  const { data: secretMessage } = trpc.proxy.auth.getSecretMessage.useQuery();
  const { data: sessionData } = useSession();
  return (
    <div>
      {sessionData && <p>Logged in as {sessionData?.user?.name}</p>}
      {secretMessage && <p>{secretMessage}</p>}
      <button onClick={sessionData ? () => signOut() : () => signIn()}>
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

const Home: NextPage = () => {
  const hello = trpc.proxy.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>
          Create <span>T3</span> App
        </h1>
        <div>
          <h3>This stack uses:</h3>
          <ul>
            <Technology
              name={"NextJS"}
              description={"The React framework for production"}
              documentation={"https://nextjs.org/"}
            />
            <Technology
              name={"tRPC"}
              description={"End-to-end typesafe APIs made easy"}
              documentation={"https://trpc.io/"}
            />
            <Technology
              name={"TypeScript"}
              description={
                "Strongly typed programming language that builds on JavaScript, giving you better tooling at any scale"
              }
              documentation={"https://www.typescriptlang.org/"}
            />
          </ul>
          <div>
            {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
          </div>
        </div>
        <AuthShowcase />
      </div>
    </>
  );
};

export default Home;

interface TechnologyProps {
  name: string;
  description: string;
  documentation: string;
}

const Technology: React.FC<TechnologyProps> = (props) => {
  return (
    <>
      <li>
        <a href={props.documentation} target="_blank" rel="noreferrer">
          {props.name}
        </a>
      </li>
    </>
  );
};
